<?xml version="1.0"?>
<project basedir="." default="dist" name="CVSGrab">
	<property name="version" value="1.2"></property>
	<property name="src.dir" value="src"></property>
	<property name="doc.dir" value="doc"></property>
	<property name="api.dir" value="doc/api"></property>
	<property name="lib.dir" value="lib"></property>
	<property name="etc.dir" value="etc"></property>
	<property name="build.dir" value="build"></property>
	<property name="build.classes.dir" value="${build.dir}/classes"></property>
	<property name="build.dist.dir" value="${build.dir}/dist"></property>
	<property name="debug" value="on"></property>
	<property name="optimize" value="off"></property>
	<property name="jar.file" value="cvs-grab.jar"></property>
	<property name="dist.zip" value="../cvsgrab_v${version}.zip"></property>
	<property name="dist.tar" value="../cvsgrab_v${version}.tar"></property>
	<property name="dist.src.zip" value="../cvsgrab_v${version}-src.zip"></property>
	<path id="project.class.path">
		<fileset dir="lib">
			<include name="**/*.jar"></include>
		</fileset>
	</path>

	<target name="init">
		<mkdir dir="${build.dir}"></mkdir>
		<mkdir dir="${api.dir}"></mkdir>
		<delete>
			<fileset dir="." includes="**/*.$$$" />
                </delete>
	</target>

	<target depends="init" description="build javadoc api" name="apidoc">
		<javadoc author="true" bottom="Copyright c 2002 Ludovic Claude. LGPL Licence." destdir="${api.dir}" header="CVSGrab" packagenames="cvsgrab.*" private="true" sourcepath="${src.dir}" use="true" version="true" windowtitle="CVSGrab - API"></javadoc>
	</target>

	<target depends="init" description="Compile the java source" name="compile">
		<mkdir dir="${build.classes.dir}"></mkdir>
		<javac debug="${debug}" destdir="${build.classes.dir}" optimize="${optimize}" srcdir="${src.dir}" target="1.2">
			<classpath refid="project.class.path"></classpath>
			<include name="**/*.java"></include>
		</javac>
	</target>

	<target depends="compile" description="Build the jar file" name="jar">
		<copy todir="${build.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.gif"></include>
				<include name="**/*.properties"></include>
			</fileset>
		</copy>
		<jar basedir="${build.classes.dir}" compress="false" includes="**/*.class,**/*.gif,**/*.properties" jarfile="${build.dir}/${jar.file}" manifest="${src.dir}/META-INF/manifest.mf"></jar>
	</target>

	<target description="Build the distribution" depends="jar" name="dist">
		<mkdir dir="${build.dist.dir}"></mkdir>
		<copy file="${build.dir}/${jar.file}" todir="${build.dist.dir}/lib"></copy>
		<copy todir="${build.dist.dir}/lib">
			<fileset dir="${lib.dir}" includes="*.jar"></fileset>
		</copy>
		<copy todir="${build.dist.dir}">
			<fileset dir="${etc.dir}/script"></fileset>
			<fileset dir="${etc.dir}" includes="samples/**"></fileset>
		</copy>
		<filter token="version" value="${version}" />                
		<copy todir="${build.dist.dir}/doc" filtering="true">
			<fileset dir="${doc.dir}" includes="*"></fileset>
		</copy>
		<fixcrlf eof="remove" eol="lf" includes="**/*.sh" srcdir="${build.dist.dir}" />
		<fixcrlf eol="crlf" includes="**/*.bat" srcdir="${build.dist.dir}"/>
		<zip zipfile="${dist.zip}">
                    <zipfileset dir="${build.dist.dir}" prefix="cvsgrab_v${version}"/>
                </zip>
		<tar tarfile="${dist.tar}">
                    <tarfileset dir="${build.dist.dir}" prefix="cvsgrab_v${version}"/>
                </tar>
		<zip zipfile="${dist.src.zip}">
                    <zipfileset dir="." prefix="cvsgrab_v${version}-src">
                        <exclude name="bak/**"/>
                        <exclude name="classes/**"/>
                        <exclude name="build/**"/>
                        <exclude name="**/*.local"/>
                        <exclude name="**/*~"/>
                        <exclude name="**/*.$$$"/>
                    </zipfileset>
                </zip>
	</target>

	<target description="Remove the build dir and the readme.html" name="clean">
		<delete dir="${build.dir}"></delete>
	</target>

	<target depends="clean" description="Remove all generated files" name="clean-all">
		<delete file="${dist.zip}"></delete>
		<delete file="${dist.tar}"></delete>
	</target>

	<target depends="dist,apidoc" description="Build all" name="all"></target>
</project>
